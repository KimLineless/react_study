{"ast":null,"code":"var _jsxFileName = \"/Users/kimlineless/Desktop/study/\\u110B\\u1166\\u110B\\u1175\\u110E\\u1175\\u1111\\u1169\\u1110\\u1166\\u110F\\u1173 - \\u1100\\u116A\\u110C\\u1166/study1/client/src/component/Tab.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TabMenu = styled.ul`\n  background-color: #dcdcdc;\n  color: rgb(232, 234, 237);\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  list-style: none;\n  margin-bottom: 7rem;\n  margin-top: 10px;\n\n  .submenu {\n    display: flex;\n    /* justify-content: space-between;\n    width: 380px;\n    heigth: 30px; */\n    width: calc(100% /3);\n    padding: 10px;\n    font-size: 15px;\n    transition: 0.5s;\n    border-radius: 10px 10px 0px 0px;\n  }\n\n  .focused {\n   //선택된 Tabmenu 에만 적용되는 CSS를 구현\n    background-color: rgb(255,255,255);\n    color: rgb(21,20,20);\n  }\n\n  & div.desc {\n    text-align: center;\n  }\n`;\n_c = TabMenu;\nconst Desc = styled.div`\n  text-align: center;\n`;\n_c2 = Desc;\nexport const Tab = () => {\n  _s();\n  // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\n  const [currentTab, clickTab] = useState(0);\n  const menuArr = [{\n    name: 'Tab1',\n    content: 'Tab menu ONE'\n  }, {\n    name: 'Tab2',\n    content: 'Tab menu TWO'\n  }, {\n    name: 'Tab3',\n    content: 'Tab menu THREE'\n  }];\n  const selectMenuHandler = index => {\n    // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\n    // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\n    clickTab(index);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TabMenu, {\n        children: menuArr.map((el, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: index === currentTab ? \"submenu focused\" : \"submenu\",\n          onClick: () => selectMenuHandler(index),\n          children: el.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Desc, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: menuArr[currentTab].content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Tab, \"RvUix/JOOBFNPmZMtzPVPvvlGT4=\");\n_c3 = Tab;\nexport default Tab;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TabMenu\");\n$RefreshReg$(_c2, \"Desc\");\n$RefreshReg$(_c3, \"Tab\");","map":{"version":3,"names":["useState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","TabMenu","ul","_c","Desc","div","_c2","Tab","_s","currentTab","clickTab","menuArr","name","content","selectMenuHandler","index","children","map","el","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/kimlineless/Desktop/study/에이치포테크 - 과제/study1/client/src/component/Tab.js"],"sourcesContent":["import { useState } from 'react';\nimport styled from 'styled-components';\n\n// Styled-Component 라이브러리를 활용해 TabMenu 와 Desc 컴포넌트의 CSS를 구현.\n\nconst TabMenu = styled.ul`\n  background-color: #dcdcdc;\n  color: rgb(232, 234, 237);\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  list-style: none;\n  margin-bottom: 7rem;\n  margin-top: 10px;\n\n  .submenu {\n    display: flex;\n    /* justify-content: space-between;\n    width: 380px;\n    heigth: 30px; */\n    width: calc(100% /3);\n    padding: 10px;\n    font-size: 15px;\n    transition: 0.5s;\n    border-radius: 10px 10px 0px 0px;\n  }\n\n  .focused {\n   //선택된 Tabmenu 에만 적용되는 CSS를 구현\n    background-color: rgb(255,255,255);\n    color: rgb(21,20,20);\n  }\n\n  & div.desc {\n    text-align: center;\n  }\n`;\n\nconst Desc = styled.div`\n  text-align: center;\n`;\n\nexport const Tab = () => {\n  // Tab Menu 중 현재 어떤 Tab이 선택되어 있는지 확인하기 위한 currentTab 상태와 currentTab을 갱신하는 함수가 존재해야 하고, 초기값은 0.\n  const [currentTab, clickTab] = useState(0);\n\n  const menuArr = [\n    { name: 'Tab1', content: 'Tab menu ONE' },\n    { name: 'Tab2', content: 'Tab menu TWO' },\n    { name: 'Tab3', content: 'Tab menu THREE' },\n  ];\n\n  const selectMenuHandler = (index) => {\n    // parameter로 현재 선택한 인덱스 값을 전달해야 하며, 이벤트 객체(event)는 쓰지 않는다\n    // 해당 함수가 실행되면 현재 선택된 Tab Menu 가 갱신.\n    clickTab(index);\n  };\n\n  return (\n    <>\n      <div>\n        <TabMenu>\n          {/* <li className=\"submenu\">{menuArr[0].name}</li>\n          <li className=\"submenu\">{menuArr[1].name}</li>\n          <li className=\"submenu\">{menuArr[2].name}</li> */}\n          {menuArr.map((el,index) => (\n              <li className={index === currentTab ? \"submenu focused\" : \"submenu\" }\n              onClick={() => selectMenuHandler(index)}>{el.name}</li>\n            ))}\n        </TabMenu>\n        <Desc>\n          <p>{menuArr[currentTab].content}</p>\n        </Desc>\n      </div>\n    </>\n  );\n};\nexport default Tab;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,mBAAmB;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,OAAO,GAAGL,MAAM,CAACM,EAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAhCIF,OAAO;AAkCb,MAAMG,IAAI,GAAGR,MAAM,CAACS,GAAI;AACxB;AACA,CAAC;AAACC,GAAA,GAFIF,IAAI;AAIV,OAAO,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAE1C,MAAMgB,OAAO,GAAG,CACd;IAAEC,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAe,CAAC,EACzC;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAe,CAAC,EACzC;IAAED,IAAI,EAAE,MAAM;IAAEC,OAAO,EAAE;EAAiB,CAAC,CAC5C;EAED,MAAMC,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACA;IACAL,QAAQ,CAACK,KAAK,CAAC;EACjB,CAAC;EAED,oBACEjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACElB,OAAA;MAAAkB,QAAA,gBACElB,OAAA,CAACG,OAAO;QAAAe,QAAA,EAILL,OAAO,CAACM,GAAG,CAAC,CAACC,EAAE,EAACH,KAAK,kBAClBjB,OAAA;UAAIqB,SAAS,EAAEJ,KAAK,KAAKN,UAAU,GAAG,iBAAiB,GAAG,SAAW;UACrEW,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAACC,KAAK,CAAE;UAAAC,QAAA,EAAEE,EAAE,CAACN;QAAI;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI,eACV1B,OAAA,CAACM,IAAI;QAAAY,QAAA,eACHlB,OAAA;UAAAkB,QAAA,EAAIL,OAAO,CAACF,UAAU,CAAC,CAACI;QAAO;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC/B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACH,iBACL;AAEP,CAAC;AAAChB,EAAA,CAlCWD,GAAG;AAAAkB,GAAA,GAAHlB,GAAG;AAmChB,eAAeA,GAAG;AAAC,IAAAJ,EAAA,EAAAG,GAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}